CREATE DATABASE Bank;


CREATE TABLE UserLogins(
UserLoginID SMALLINT UNIQUE PRIMARY KEY NOT NULL,
UserLogin CHAR(15) NOT NULL UNIQUE,
UserPassword VARCHAR(20) NOT NULL
);


CREATE TABLE UserSecurityQuestions(
UserSecurityQuestionID SMALLINT UNIQUE PRIMARY KEY NOT NULL,
UserSecurityQuestion VARCHAR(50) NOT NULL
);


CREATE TABLE AccountType(
AccountTypeID SMALLINT UNIQUE NOT NULL PRIMARY KEY,
AccontTypeDescription VARCHAR(30)
);


CREATE TABLE SavingInterestRates(
InterstSavingRateID SMALLINT NOT NULL UNIQUE PRIMARY KEY,
InterestRateValue numeric(9,9),
InterestRateDescription VARCHAR(20)
);


CREATE TABLE AccountStatusType(
AccountStatusTypeID SMALLINT NOT NULL UNIQUE PRIMARY KEY,
AccountStatusDescription VARCHAR(30)
);


CREATE TABLE Employee(
EmployeeID INT UNIQUE NOT NULL PRIMARY KEY,
EmployeeFirstName VARCHAR(25) NOT NULL,
EmployeeMiddleInitial CHAR(1),
EmployeeLastName VARCHAR(25) NOT NULL,
EmployeelsManager BIT NOT NULL
);


CREATE TABLE TransactionType(
TransactionTypeID SMALLINT NOT NULL UNIQUE PRIMARY KEY,
TransactionTypeName CHAR(10) NOT NULL,
TransactionTypeDescription VARCHAR(50),
TransactionFeeAmount MONEY NOT NULL
);


CREATE TABLE LoginErrorLog(
ErrorLogID INT NOT NULL UNIQUE PRIMARY KEY,
ErrorTime TIMESTAMP NOT NULL,
FailedTransactionXML TIMESTAMP NOT NULL
);


CREATE TABLE FailedTransactionErrorType(
FailedTransactionErrorTypeID SMALLINT UNIQUE PRIMARY KEY NOT NULL,
FailedTransactionDescription VARCHAR(50)
);


CREATE TABLE Customer(
CustomerID INT NOT NULL UNIQUE PRIMARY KEY,
CustomerAddress1 VARCHAR(30) NOT NULL,
CustomerAddress2 VARCHAR(30),
CustomerFirstName VARCHAR(30) NOT NULL,
CustomerMiddleInitial CHAR(1),
CustomerLastName VARCHAR(30) NOT NULL,
City VARCHAR(20) NOT NULL,
State CHAR(2) NOT NULL,
ZipCode CHAR(10) NOT NULL,
EmailAddress VARCHAR(40) UNIQUE,
HomePhone CHAR(10) NOT NULL,
CellPhone CHAR(10) UNIQUE,
WorkPhone CHAR(10) UNIQUE,
SSN CHAR(9),
UserLoginID SMALLINT REFERENCES UserLogins ON DELETE CASCADE ON UPDATE CASCADE       	
);


CREATE TABLE FailedTransactionLog(
FailedTransactionID INT NOT NULL UNIQUE PRIMARY KEY,
FailedTransactionErrorTypeID SMALLINT REFERENCES FailedTransactionErrorType ON DELETE CASCADE ON UPDATE CASCADE,
FailedTransactionErrorTime TIMESTAMP NOT NULL,
FailedTransactionXML TIMESTAMP NOT NULL    
);


CREATE TABLE Account(
AccountID INT NOT NULL UNIQUE PRIMARY KEY,
CurrentBalance INT NOT NULL CHECK(CurrentBalance > 0),
AccountTypeID SMALLINT REFERENCES AccountType ON DELETE CASCADE ON UPDATE CASCADE,
AccountStatusTypeID SMALLINT REFERENCES AccountStatusType ON DELETE CASCADE ON UPDATE CASCADE,
InterestSavingRateID SMALLINT REFERENCES SavingInterestRates ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE OverDraftLog(
AccountID INT PRIMARY KEY REFERENCES Account ON DELETE CASCADE ON UPDATE CASCADE,
OverDraftDate TIMESTAMP NOT NULL,
OverDraftAmount Money NOT NULL,
OverDraftTransactionXML TIMESTAMP
);


CREATE TABLE Customer_Account(
AccountID INT REFERENCES Account ON DELETE CASCADE ON UPDATE CASCADE,
CustomerID INT REFERENCES Customer ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE Login_Account(
UserLoginID SMALLINT REFERENCES UserLogins ON DELETE CASCADE ON UPDATE CASCADE,
AccountID INT REFERENCES Account ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE UserSecurityAnswer(
UserLoginID SMALLINT PRIMARY KEY REFERENCES UserLogins ON DELETE CASCADE ON UPDATE CASCADE,
UserSecurityAnswer VARCHAR(25) NOT NULL,
UserSecurityQuestionsID SMALLINT REFERENCES UserSecurityQuestions ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE TransactionLog(
TransactionID INT UNIQUE PRIMARY KEY NOT NULL,
TransactionDate TIMESTAMP NOT NULL,
TransactionAmount Money NOT NULL,
NewBalance Money NOT NULL,
TransactionTypeID SMALLINT REFERENCES TransactionType ON DELETE CASCADE ON UPDATE CASCADE, 
AccountID INT REFERENCES Account ON DELETE CASCADE ON UPDATE CASCADE,
CustomerID INT REFERENCES Customer ON DELETE CASCADE ON UPDATE CASCADE,
EmployeeID INT REFERENCES Employee ON DELETE CASCADE ON UPDATE CASCADE,
UserLoginID SMALLINT REFERENCES UserLogins ON DELETE CASCADE ON UPDATE CASCADE
);

